[{"C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Views\\PublicationListView.js":"3","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\PublicationList.js":"4","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\PublicationListItem.js":"5","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\SharePublicationPopover.js":"6","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\AddToFavouriteListPopover.js":"7","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\SharePublication.js":"8","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\AddToFavoriteList.js":"9"},{"size":166,"mtime":1611018936795,"results":"10","hashOfConfig":"11"},{"size":190,"mtime":1609877881140,"results":"12","hashOfConfig":"11"},{"size":4107,"mtime":1611097766419,"results":"13","hashOfConfig":"11"},{"size":20181,"mtime":1611091454024,"results":"14","hashOfConfig":"11"},{"size":4232,"mtime":1611264277764,"results":"15","hashOfConfig":"11"},{"size":1970,"mtime":1609941422464,"results":"16","hashOfConfig":"11"},{"size":1972,"mtime":1609853230678,"results":"17","hashOfConfig":"11"},{"size":3237,"mtime":1611445263403,"results":"18","hashOfConfig":"11"},{"size":3404,"mtime":1611102395277,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lmljdt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\index.js",[],["44","45"],"C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\App.js",[],"C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Views\\PublicationListView.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"import React, { useEffect, useState } from \"react\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport PublicationList from '../Components/PublicationList';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Image, Row, Card, Container} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../cssStylesheets/btn.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  }\r\n  \r\n}));\r\n\r\nfunction PublicationListView() {\r\n  const classes = useStyles();\r\n  //const [data, setData] = useState([]);\r\n  const publications = [\r\n    {\r\n        id : 1,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolor sit amet, consecutor adipiscing 1\",\r\n        month:2,\r\n        type: \"Book\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"ddd\"]\r\n    },\r\n    {\r\n        id : 2,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 2\",\r\n        month:2,\r\n        type: \"Book\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n    },\r\n    {\r\n        id : 3,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 3\",\r\n        month:10,\r\n        type: \"Book\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n    },\r\n    {\r\n        id : 4,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 4\",\r\n        month:4,\r\n        type: \"Proceeding\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n    },\r\n    {\r\n        id : 5,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 5\",\r\n        month:11,\r\n        type: \"Proceeding\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n\r\n    },\r\n    {\r\n        id : 6,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 6\",\r\n        month:2,\r\n        type: \"Proceeding\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n    },\r\n    {\r\n        id : 7,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 7\",\r\n        month:4,\r\n        type: \"Proceeding\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n    },\r\n    {\r\n        id : 8,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 8\",\r\n        month:2,\r\n        type: \"Proceeding\",\r\n        year: 2018,\r\n        school: \"Musteruniversität\",\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n    },\r\n    {\r\n        id : 9,\r\n        author : \"Max Mustermann\",\r\n        title : \"Lorem ipsum dolo sit amet, consecutor adipiscing 9\",\r\n        month:2,\r\n        type: \"Proceeding\",\r\n        year: 2018,\r\n        school: undefined,\r\n        keywords: [\"aaa\",\"bbb\",\"dssdf\"]\r\n    }\r\n  ]\r\n\r\n  //useEffect(() => {\r\n  //axios\r\n  //  .get(URL)\r\n  //  .then(result => setData(result.data));\r\n  //}, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PublicationList searched=\"all\" publications={publications} /> \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst dropdownStyle={\r\n  height:'auto',\r\n  maxHeight:'200px',\r\n  overflowX:'hidden',\r\n}\r\nconst filterStyle={\r\n  backgroundColor: '#F0F0F0',\r\n  paddingTop: '10px',\r\n  paddingBottom: '10px',\r\n  marginBottom: '10px',\r\n}\r\nconst headlineStyle={\r\n  lineHeight:'50px',\r\n  textAlign: 'left',\r\n  font: 'normal normal 300 34px/50px Roboto',\r\n  letterSpacing: '3.03px',\r\n  color: '#333333',\r\n  opacity: '1',\r\n  textDecoration: 'none',\r\n}\r\nconst headerStyle={\r\n  height: '50px',\r\n  borderBottom: '2px solid #737373',\r\n}\r\n\r\nexport default PublicationListView;","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\PublicationList.js",["60","61"],"import React , {Component} from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport PublicationListItem from './PublicationListItem';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport X_Icon from '../assets/x-icon.png';\r\nimport {Image, Row, Card, Container} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../cssStylesheets/btn.css'\r\n\r\n\r\nclass PublicationList extends Component {\r\n  state={\r\n      publications: this.props.publications,\r\n      monthFilter:null,\r\n      publicationTypeFilter:null,\r\n      yearFilter:null,\r\n      keywordFilters:[],\r\n  }\r\n  render(){    \r\n      const today=new Date();\r\n      const currentYear=today.getFullYear();\r\n      const years=[];\r\n      var i;\r\n      for(let year=currentYear;year>=1987;year--){\r\n          years.push(year);\r\n      }\r\n      const months=['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'];\r\n      const publicationTypes=['Article', 'Book', 'Phd Thesis', 'Proceeding', 'In Proceeding', 'In Collection'];\r\n      const keywords=[];\r\n      this.props.publications.forEach((publication) =>{\r\n          if(typeof publication.keywords !== 'undefined'){\r\n            for (i in publication.keywords) {  \r\n              if(!keywords.includes(publication.keywords[i])){\r\n                return keywords.push(publication.keywords[i]);\r\n              }\r\n            }  \r\n          }\r\n      });\r\n      return (\r\n          <div >\r\n              <Card>\r\n                  <Card.Body>\r\n                      <Row style={headerStyle}>\r\n                          <div className=\"col\">\r\n                              <p style={headlineStyle}>\r\n                                  Alle Publikationen\r\n                              </p>\r\n                          </div>\r\n                          <div className=\"col-2\">\r\n                              <button type=\"button\" className=\"btn btn-sm btn-filter\" data-toggle=\"collapse\" data-target=\"#filter\" aria-expanded=\"false\" aria-controls=\"filter\">\r\n                                  Filtern\r\n                              </button>\r\n                          </div>\r\n                      </Row>\r\n                      <div className=\"collapse\" id=\"filter\">\r\n                          <Row style={filterStyle}>\r\n                              <div className=\"col\">\r\n                                  <div className=\"btn-group\" role=\"group\">\r\n                                      <button id=\"yearButton\" type=\"button\" className=\"btn btn-md btn-filterAttribute dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                          Jahr\r\n                                      </button>\r\n                                      <div className=\"dropdown-menu\" aria-labelledby=\"yearButton\" style={dropdownStyle}>\r\n                                          {years.map((year) =>\r\n                                              <button className=\"dropdown-item\" key={year} onClick={() =>{\r\n                                                  const newState=Object.assign(this.state);\r\n                                                  newState.yearFilter=year;\r\n                                                  newState.publications=this.props.publications;\r\n                                                  filterPublications(newState);\r\n                                                  this.setState(newState);\r\n                                              }}>{year}</button>\r\n                                          )}\r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"btn-group\" role=\"group\">\r\n                                      <button id=\"monthButton\" type=\"button\" className=\"btn btn-md btn-filterAttribute dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                          Monat\r\n                                      </button>\r\n                                      <div className=\"dropdown-menu\" aria-labelledby=\"monthButton\" style={dropdownStyle}>\r\n                                          {months.map((month) =>\r\n                                              <button className=\"dropdown-item\" key={month} onClick={() =>{\r\n                                                  const newState=Object.assign(this.state);\r\n                                                  newState.monthFilter=monthNameToNumber(month);\r\n                                                  newState.publications=this.props.publications;\r\n                                                  filterPublications(newState);\r\n                                                  this.setState(newState);\r\n                                              }}>{month}</button>\r\n                                          )}\r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"btn-group\" role=\"group\">\r\n                                      <button id=\"publicationTypeButton\" type=\"button\" className=\"btn btn-md btn-filterAttribute dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                          Publikationstyp\r\n                                      </button>\r\n                                      <div className=\"dropdown-menu\" aria-labelledby=\"publicationTypeButton\" style={dropdownStyle}>\r\n                                          {publicationTypes.map((publicationType) =>\r\n                                              <button className=\"dropdown-item\" key={publicationType} onClick={() =>{\r\n                                                  const newState=Object.assign(this.state);\r\n                                                  newState.publicationTypeFilter=publicationType;\r\n                                                  newState.publications=this.props.publications;\r\n                                                  filterPublications(newState);\r\n                                                  this.setState(newState);\r\n                                              }}>{publicationType}</button>\r\n                                          )}\r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"btn-group\" role=\"group\">\r\n                                      <button id=\"keywordsButton\" type=\"button\" className=\"btn btn-md btn-filterAttribute dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                          Stichwörter\r\n                                      </button>\r\n                                      <div className=\"dropdown-menu\" aria-labelledby=\"keywordsButton\" style={dropdownStyle}>\r\n                                          {keywords.map((keyword) =>\r\n                                              <button className=\"dropdown-item\" key={keyword} onClick={() =>{\r\n                                                  const newState=Object.assign(this.state);\r\n                                                  if(!newState.keywordFilters.includes(keyword)){\r\n                                                      newState.keywordFilters.push(keyword);\r\n                                                      newState.publications=this.props.publications;\r\n                                                      filterPublications(newState)\r\n                                                      this.setState(newState);\r\n                                                  }\r\n                                              }}>{keyword}</button>\r\n                                          )}\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"col-sm-2\" align=\"right\">\r\n                                  <button type=\"button\" className=\"btn btn-sm btn-delete-filter\" onClick={() =>{\r\n                                      const newState={\r\n                                          publications: this.props.publications,\r\n                                          monthFilter:null,\r\n                                          publicationTypeFilter:null,\r\n                                          yearFilter:null,\r\n                                          keywordFilters:[],\r\n                                      }\r\n                                      this.setState(newState);\r\n                                  }}>\r\n                                      <DeleteIcon/> \r\n                                      Filter löschen\r\n                                  </button>\r\n                              </div>\r\n                          </Row>\r\n                          <Row>\r\n                              {this.state.yearFilter!=null &&\r\n                                  <ol className=\"breadcrumb filter-breadcrumb\">\r\n                                      <li className=\"breadcrumb-item\"><p>Jahr: {this.state.yearFilter}</p></li>\r\n                                      <li className=\"breadcrumb-item\">\r\n                                      <button type=\"button\" className=\"btn btn-xs btn-delete-one-filter\" onClick={() =>{\r\n                                          const newState=Object.assign(this.state);\r\n                                          newState.yearFilter=null;\r\n                                          newState.publications=this.props.publications;\r\n                                          filterPublications(newState);\r\n                                          this.setState(newState);\r\n                                      }}>\r\n                                          <img src={X_Icon} alt=\"\" className=\"delete-icon\"/>\r\n                                      </button>\r\n                                      </li>\r\n                                  </ol>\r\n                              }\r\n                              {this.state.monthFilter!=null &&\r\n                                  <ol className=\"breadcrumb filter-breadcrumb\">\r\n                                      <li className=\"breadcrumb-item\"><p>Monat: {monthNumberToName(this.state.monthFilter)}</p></li>\r\n                                      <li className=\"breadcrumb-item\">\r\n                                      <button type=\"button\" className=\"btn btn-xs btn-delete-one-filter\" onClick={()=>{\r\n                                          const newState=Object.assign(this.state);\r\n                                          newState.monthFilter=null;\r\n                                          newState.publications=this.props.publications;\r\n                                          filterPublications(newState);\r\n                                          this.setState(newState);\r\n                                      }}>\r\n                                          <img src={X_Icon} alt=\"\" className=\"delete-icon\"/>\r\n                                      </button>\r\n                                      </li>\r\n                                  </ol>\r\n                              }\r\n                              {this.state.publicationTypeFilter!=null &&\r\n                                  <ol className=\"breadcrumb filter-breadcrumb\">\r\n                                      <li className=\"breadcrumb-item\"><p>Publikationstyp: {this.state.publicationTypeFilter}</p></li>\r\n                                      <li className=\"breadcrumb-item\">\r\n                                      <button type=\"button\" className=\"btn btn-xs btn-delete-one-filter\" onClick={()=>{\r\n                                          const newState=Object.assign(this.state);\r\n                                          newState.publicationTypeFilter=null;\r\n                                          newState.publications=this.props.publications;\r\n                                          filterPublications(newState);\r\n                                          this.setState(newState);\r\n                                      }}>\r\n                                          <img src={X_Icon} alt=\"\" className=\"delete-icon\"/>\r\n                                      </button>\r\n                                      </li>\r\n                                  </ol>\r\n                              }\r\n                              {this.state.keywordFilters.map((keywordFilter)=>\r\n                                  <ol className=\"breadcrumb filter-breadcrumb\" key={keywordFilter}>\r\n                                      <li className=\"breadcrumb-item\"><p>Stichwort: {keywordFilter}</p></li>\r\n                                      <li className=\"breadcrumb-item\">\r\n                                      <button type=\"button\" className=\"btn btn-xs btn-delete-one-filter\" onClick={()=>{\r\n                                          const newState=Object.assign(this.state);\r\n                                          newState.keywordFilters.splice(newState.keywordFilters.indexOf(keywordFilter),1);\r\n                                          newState.publications=this.props.publications;\r\n                                          filterPublications(newState);\r\n                                          this.setState(newState);\r\n                                      }}>\r\n                                          <img src={X_Icon} alt=\"\" className=\"delete-icon\"/>\r\n                                      </button>\r\n                                      </li>\r\n                                  </ol>\r\n                              )}\r\n                          </Row>\r\n                      </div>\r\n                      <List >\r\n                        {this.state.publications.map(publication => \r\n                        <React.Fragment>\r\n                           <PublicationListItem key={publication.id} publication={publication}/>\r\n                           <Divider component=\"li\" />\r\n                        </React.Fragment>\r\n                        )  \r\n                        } \r\n                     </List>\r\n                      \r\n                  </Card.Body>\r\n              </Card>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nfunction filterPublications(state){\r\n  const filteredPublications=[];\r\n  let publicationsFiltered=false;\r\n  if(!(state.monthFilter===null && state.yearFilter===null && state.publicationTypeFilter===null && state.keywordFilters.length===0)){\r\n      if(state.monthFilter!=null){ //Filtern nach month\r\n          if(publicationsFiltered){ //subtraktiv\r\n              const publicationsToBeDeleted=[];\r\n              filteredPublications.forEach(publication =>{\r\n                  if(publication.month!==state.monthFilter){\r\n                      publicationsToBeDeleted.push(publication);\r\n                  }\r\n              });\r\n              publicationsToBeDeleted.forEach(publication=>{\r\n                  filteredPublications.splice(filteredPublications.indexOf(publication),1);\r\n              })\r\n          }\r\n          else{ //additiv\r\n              publicationsFiltered=true;\r\n              state.publications.forEach(publication =>{\r\n                  if(publication.month===state.monthFilter){\r\n                      filteredPublications.push(publication);\r\n                  }\r\n              })\r\n          }\r\n      }\r\n      if(state.yearFilter!=null){ //Filtern nach year\r\n          if(publicationsFiltered){ //subtraktiv\r\n              const publicationsToBeDeleted=[];\r\n              filteredPublications.forEach(publication =>{\r\n                  if(publication.year!==state.yearFilter){\r\n                      publicationsToBeDeleted.push(publication);\r\n                  }\r\n              });\r\n              publicationsToBeDeleted.forEach(publication=>{\r\n                  filteredPublications.splice(filteredPublications.indexOf(publication),1);\r\n              })\r\n          }\r\n          else{ //additiv\r\n              publicationsFiltered=true;\r\n              state.publications.forEach(publication =>{\r\n                  if(publication.year===state.yearFilter){\r\n                      filteredPublications.push(publication);\r\n                  }\r\n              })\r\n          }\r\n      }\r\n      if(state.publicationTypeFilter!=null){ //Filtern nach publicationType\r\n          if(publicationsFiltered){ //subtraktiv\r\n              const publicationsToBeDeleted=[];\r\n              filteredPublications.forEach(publication =>{\r\n                  if(publication.type!==state.publicationTypeFilter){\r\n                      publicationsToBeDeleted.push(publication);\r\n                  }\r\n              });\r\n              publicationsToBeDeleted.forEach(publication=>{\r\n                  filteredPublications.splice(filteredPublications.indexOf(publication),1);\r\n              })\r\n          }\r\n          else{ //additiv\r\n              publicationsFiltered=true;\r\n              state.publications.forEach(publication =>{\r\n                  if(publication.type===state.publicationTypeFilter){\r\n                      filteredPublications.push(publication);\r\n                  }\r\n              })\r\n          }\r\n      }\r\n      if(state.keywordFilters.length>0){ //Filtern nach keywords\r\n        if(publicationsFiltered){ //subtraktiv\r\n            const publicationsToBeDeleted=[];\r\n            filteredPublications.forEach(publication =>{\r\n                state.keywordFilters.forEach(keywordFilter=>{\r\n                    if(typeof publication.keywords==='undefined' || !publication.keywords.includes(keywordFilter)){\r\n                        if(!publicationsToBeDeleted.includes(publication))\r\n                            publicationsToBeDeleted.push(publication);\r\n                    }\r\n                })\r\n            });\r\n            publicationsToBeDeleted.forEach(publication=>{\r\n                filteredPublications.splice(filteredPublications.indexOf(publication),1);\r\n            })\r\n        }\r\n        else{ //additiv\r\n            publicationsFiltered=true;\r\n            state.publications.forEach(publication=>{\r\n                let addPublication=true;\r\n                state.keywordFilters.forEach(keywordFilter=>{\r\n                    if(typeof publication.keywords==='undefined' || !publication.keywords.includes(keywordFilter)){\r\n                        addPublication=false;\r\n                    }\r\n                })\r\n                if(addPublication){\r\n                    filteredPublications.push(publication);\r\n                }\r\n            })\r\n        }\r\n      }\r\n      state.publications=filteredPublications;\r\n  }\r\n}\r\n\r\nfunction monthNameToNumber(monthName){\r\n  switch(monthName){\r\n      case 'Januar': return 1;\r\n      case 'Februar': return 2;\r\n      case 'März': return 3;\r\n      case 'April': return 4;\r\n      case 'Mai': return 5;\r\n      case 'Juni': return 6;\r\n      case 'Juli': return 7;\r\n      case 'August': return 8;\r\n      case 'September': return 9;\r\n      case 'Oktober': return 10;\r\n      case 'November': return 11;\r\n      case 'Dezember': return 12;\r\n      default: return null;\r\n  }\r\n}\r\n\r\nfunction monthNumberToName(monthNumber){\r\n  switch(monthNumber){\r\n      case 1: return 'Januar';\r\n      case 2: return 'Februar';\r\n      case 3: return 'März';\r\n      case 4: return 'April';\r\n      case 5: return 'Mai';\r\n      case 6: return 'Juni';\r\n      case 7: return 'Juli';\r\n      case 8: return 'August';\r\n      case 9: return 'September';\r\n      case 10: return 'Oktober';\r\n      case 11: return 'November';\r\n      case 12: return 'Dezember';\r\n      default: return null;\r\n  }\r\n}\r\n\r\n\r\nconst dropdownStyle={\r\n  height:'auto',\r\n  maxHeight:'200px',\r\n  overflowX:'hidden',\r\n}\r\nconst filterStyle={\r\n  backgroundColor: '#F0F0F0',\r\n  paddingTop: '10px',\r\n  paddingBottom: '10px',\r\n  marginBottom: '10px',\r\n}\r\nconst headlineStyle={\r\n  lineHeight:'50px',\r\n  textAlign: 'left',\r\n  font: 'normal normal 300 34px/50px Roboto',\r\n  letterSpacing: '3.03px',\r\n  color: '#333333',\r\n  opacity: '1',\r\n  textDecoration: 'none',\r\n}\r\nconst headerStyle={\r\n  marginBottom: '14px',\r\n  height: '50px',\r\n  borderBottom: '2px solid #737373',\r\n}\r\n\r\n\r\nexport default PublicationList;","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\PublicationListItem.js",["62","63","64","65","66","67","68","69","70","71"],"C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\SharePublicationPopover.js",["72","73","74"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport '../cssStylesheets/sharePublication.css';\r\nimport SharePublication from './SharePublication'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  icon: {\r\n    color: 'black',\r\n    padding: 20\r\n  },\r\n  avatar_group: {\r\n    float: 'right',\r\n    marginRight:150,\r\n    marginTop:20\r\n  },\r\n  sharepubpopover:{\r\n    width: 550,\r\n    height: 460\r\n  }\r\n  \r\n}));\r\n\r\n\r\nexport default function SharePublicationPopover() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n    setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n  \r\n    return (\r\n    <React.Fragment>\r\n        <IconButton aria-describedby={id} edge=\"end\" aria-label=\"delete\" className={classes.icon} onClick={handleClick}>\r\n            <ShareIcon />\r\n        </IconButton>\r\n        <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        className={classes.sharepubpopover}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        >\r\n        \r\n            <React.Fragment>\r\n                <SharePublication />\r\n            </React.Fragment>\r\n        \r\n        </Popover> \r\n    </React.Fragment>\r\n             \r\n    );\r\n}","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\AddToFavouriteListPopover.js",["75","76","77"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport AddToFavouriteList from './AddToFavoriteList';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  icon: {\r\n    color: 'black',\r\n    padding: 20\r\n  },\r\n  avatar_group: {\r\n    float: 'right',\r\n    marginRight:150,\r\n    marginTop:20\r\n  },\r\n  addtolistpopover:{\r\n    width: 590,\r\n    height: 361, \r\n    borderRadius: 40\r\n  }\r\n  \r\n}));\r\n\r\nexport default function AddToFavouriteListPopover() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n    setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n  \r\n    return (\r\n    <React.Fragment>\r\n        <IconButton edge=\"end\" aria-label=\"zu einer Liste hinzufügen\" className={classes.icon} onClick={handleClick}>\r\n            <BookmarkBorderIcon />\r\n        </IconButton>\r\n        <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        className={classes.addtolistpopover}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        >    \r\n            <React.Fragment>\r\n              <AddToFavouriteList /> \r\n            </React.Fragment>\r\n        \r\n        </Popover> \r\n    </React.Fragment>\r\n             \r\n    );\r\n}","C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\SharePublication.js",["78","79","80","81","82","83","84","85","86","87","88","89"],"C:\\Users\\HP\\OneDrive\\Bureau\\React\\Chouette_Frontend\\src\\Components\\AddToFavoriteList.js",["90","91","92","93","94"],"import React , { useState, useEffect }from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '../cssStylesheets/btn.css'\r\nimport { green } from '@material-ui/core/colors';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Divider, ListSubheader } from '@material-ui/core';\r\nimport '../cssStylesheets/btn.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  icon: {\r\n    color: 'black',\r\n    padding: 20\r\n  },\r\n  addtolistpopover:{\r\n    width: 550,\r\n    height: 300,\r\n    maxHeight: 300,\r\n    borderRadius: 40\r\n  },\r\n  listSubheader:{\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n      color: 'black'\r\n  },\r\n  my_lists_List:{\r\n      padding : 20\r\n  } \r\n}));\r\n\r\nconst my_lists= [\r\n   {\r\n    id : 1,\r\n    name : 'My List 1'\r\n}, {\r\n    id : 2,\r\n    name : 'My List 2'\r\n}, {\r\n    id : 3,\r\n    name : 'My List 3'\r\n}, {\r\n  id : 4,\r\n  name : 'My List 4'\r\n}, {\r\n  id : 5,\r\n  name : 'My List 5'\r\n}, {\r\n  id : 6,\r\n  name : 'My List 6'\r\n}\r\n]\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: '#009D6D',\r\n    '&$checked': {\r\n      color: 'green[600]',\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n\r\n\r\nexport default function AddToFavouriteList() {\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    const my_lists_ids = [] \r\n\r\n    useEffect(() => {\r\n        my_lists.map((my_list) => {\r\n            my_lists_ids.push(my_list.id)\r\n        })\r\n    }, [])\r\n\r\n    \r\n    const [checked, setChecked] = React.useState([]);\r\n\r\n    const handleToggle = (value) => () => {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n\r\n      setChecked(newChecked);\r\n    };\r\n\r\n    const handleClick = (event) =>  {\r\n\r\n    };\r\n\r\n  return (\r\n    <div className={classes.addtolistpopover} >\r\n      <List className={classes.my_lists_List} subheader={<ListSubheader disableSticky='true' className={classes.listSubheader}>Liste zum Speichern auswählen</ListSubheader>}> \r\n      {my_lists.map((list) => {\r\n        const labelId = `checkbox-list-secondary-label-${list.id}`;\r\n        return (\r\n          <React.Fragment>\r\n            <ListItem key={list.id} button>\r\n            <ListItemText id={labelId} primary={list.name} />\r\n            <ListItemSecondaryAction>\r\n              <GreenCheckbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(list.id)}\r\n                checked={checked.indexOf(list.id) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <Divider component=\"li\" />\r\n          </React.Fragment>         \r\n        );\r\n      })}\r\n      <button type=\"button\" className=\"btn btn-sm btn-filter\" aria-expanded=\"false\" onClick={handleClick}>\r\n          SPEICHERN\r\n      </button>\r\n    </List>\r\n    </div>   \r\n  );            \r\n}",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"103","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"104","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"105","line":3,"column":22,"nodeType":"101","messageId":"102","endLine":3,"endColumn":32},{"ruleId":"99","severity":1,"message":"106","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":18},{"ruleId":"99","severity":1,"message":"107","line":6,"column":9,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"108","line":6,"column":16,"nodeType":"101","messageId":"102","endLine":6,"endColumn":19},{"ruleId":"99","severity":1,"message":"109","line":6,"column":21,"nodeType":"101","messageId":"102","endLine":6,"endColumn":25},{"ruleId":"99","severity":1,"message":"110","line":6,"column":27,"nodeType":"101","messageId":"102","endLine":6,"endColumn":36},{"ruleId":"99","severity":1,"message":"111","line":22,"column":9,"nodeType":"101","messageId":"102","endLine":22,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":131,"column":7,"nodeType":"101","messageId":"102","endLine":131,"endColumn":20},{"ruleId":"99","severity":1,"message":"113","line":136,"column":7,"nodeType":"101","messageId":"102","endLine":136,"endColumn":18},{"ruleId":"99","severity":1,"message":"114","line":142,"column":7,"nodeType":"101","messageId":"102","endLine":142,"endColumn":20},{"ruleId":"99","severity":1,"message":"115","line":151,"column":7,"nodeType":"101","messageId":"102","endLine":151,"endColumn":18},{"ruleId":"99","severity":1,"message":"107","line":7,"column":9,"nodeType":"101","messageId":"102","endLine":7,"endColumn":14},{"ruleId":"99","severity":1,"message":"110","line":7,"column":27,"nodeType":"101","messageId":"102","endLine":7,"endColumn":36},{"ruleId":"99","severity":1,"message":"116","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"117","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":14},{"ruleId":"99","severity":1,"message":"118","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":19},{"ruleId":"99","severity":1,"message":"119","line":15,"column":8,"nodeType":"101","messageId":"102","endLine":15,"endColumn":17},{"ruleId":"99","severity":1,"message":"120","line":18,"column":8,"nodeType":"101","messageId":"102","endLine":18,"endColumn":15},{"ruleId":"99","severity":1,"message":"121","line":66,"column":7,"nodeType":"101","messageId":"102","endLine":66,"endColumn":39},{"ruleId":"99","severity":1,"message":"122","line":77,"column":9,"nodeType":"101","messageId":"102","endLine":77,"endColumn":20},{"ruleId":"99","severity":1,"message":"123","line":81,"column":9,"nodeType":"101","messageId":"102","endLine":81,"endColumn":20},{"ruleId":"99","severity":1,"message":"124","line":86,"column":9,"nodeType":"101","messageId":"102","endLine":86,"endColumn":11},{"ruleId":"125","severity":1,"message":"126","line":119,"column":11,"nodeType":"127","endLine":119,"endColumn":61},{"ruleId":"99","severity":1,"message":"116","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"105","line":3,"column":22,"nodeType":"101","messageId":"102","endLine":3,"endColumn":32},{"ruleId":"99","severity":1,"message":"106","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":18},{"ruleId":"99","severity":1,"message":"116","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"105","line":3,"column":22,"nodeType":"101","messageId":"102","endLine":3,"endColumn":32},{"ruleId":"99","severity":1,"message":"106","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":37},{"ruleId":"99","severity":1,"message":"105","line":2,"column":22,"nodeType":"101","messageId":"102","endLine":2,"endColumn":32},{"ruleId":"99","severity":1,"message":"128","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":15},{"ruleId":"99","severity":1,"message":"129","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":12},{"ruleId":"99","severity":1,"message":"130","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"131","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":31},{"ruleId":"99","severity":1,"message":"132","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":20},{"ruleId":"99","severity":1,"message":"104","line":10,"column":10,"nodeType":"101","messageId":"102","endLine":10,"endColumn":17},{"ruleId":"99","severity":1,"message":"133","line":10,"column":31,"nodeType":"101","messageId":"102","endLine":10,"endColumn":44},{"ruleId":"99","severity":1,"message":"134","line":14,"column":10,"nodeType":"101","messageId":"102","endLine":14,"endColumn":16},{"ruleId":"99","severity":1,"message":"135","line":63,"column":12,"nodeType":"101","messageId":"102","endLine":63,"endColumn":22},{"ruleId":"99","severity":1,"message":"136","line":63,"column":24,"nodeType":"101","messageId":"102","endLine":63,"endColumn":37},{"ruleId":"99","severity":1,"message":"103","line":1,"column":18,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"106","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"128","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":82,"column":32,"nodeType":"139","messageId":"140","endLine":82,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":85,"column":8,"nodeType":"143","endLine":85,"endColumn":10,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Divider' is defined but never used.","'withStyles' is defined but never used.","'Typography' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'classes' is assigned a value but never used.","'dropdownStyle' is assigned a value but never used.","'filterStyle' is assigned a value but never used.","'headlineStyle' is assigned a value but never used.","'headerStyle' is assigned a value but never used.","'PropTypes' is defined but never used.","'styled' is defined but never used.","'CommentIcon' is defined but never used.","'ShareIcon' is defined but never used.","'Popover' is defined but never used.","'ListItemWithWiderSecondaryAction' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'green' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'ListSubheader' is defined but never used.","'Button' is defined but never used.","'empfaenger' is assigned a value but never used.","'setEmpfaenger' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'my_lists_ids'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [my_lists_ids]",{"range":"150","text":"151"},[1829,1831],"[my_lists_ids]"]